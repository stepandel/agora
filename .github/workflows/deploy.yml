name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose an environment to deploy to: <dev|staging|prod>"
        required: true
        default: "dev"

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    name: Build Frontend
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          cache: "yarn"

      - run: yarn install

      - run: yarn workspace @agora/common codegen

      - run: yarn workspace @agora/frontend run build
        env:
          VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          VITE_GITHUB_SHA: ${{ github.sha }}
          VITE_DEPLOY_ENV: ${{ github.event.inputs.environment || 'staging' }}
          VITE_ALCHEMY_ID: ${{ secrets.ALCHEMY_KEY }}
          VITE_GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          VITE_OPENAI_KEY: ${{ secrets.OPENAI_KEY }}

      # - uses: getsentry/action-release@v1
      #   env:
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #     SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      #     SENTRY_PROJECT: frontend
      #   with:
      #     sourcemaps: "./packages/frontend/dist/"

      - uses: actions/upload-artifact@v3
        with:
          name: compiled-frontend
          path: packages/frontend/dist

  build-backend:
    runs-on: ubuntu-latest
    name: Build Backend
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          cache: "yarn"

      - run: yarn install

      - run: yarn workspace @agora/common codegen

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: package/render-opengraph

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: wasm-pack

      - name: Build render-opengraph
        working-directory: ./packages/render-opengraph
        run: |
          wasm-pack build --target web
          rm pkg/render_opengraph_bg.wasm.d.ts

      - run: yarn workspace @agora/backend run generate

      - run: yarn workspace @agora/backend run build-worker

      # - uses: getsentry/action-release@v1
      #   env:
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #     SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      #     SENTRY_PROJECT: backend
      #   with:
      #     sourcemaps: "./packages/backend/dist/"

      - uses: actions/upload-artifact@v3
        with:
          name: compiled-backend
          path: packages/backend/dist

  publish:
    runs-on: ubuntu-latest
    name: Publish

    needs:
      - build-frontend
      - build-backend

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          cache: "yarn"

      - uses: actions/download-artifact@v3
        with:
          name: compiled-frontend
          path: packages/frontend/dist

      - uses: actions/download-artifact@v3
        with:
          name: compiled-backend
          path: packages/backend/dist

      - run: yarn install

      - run: sed -i 's/yarn build-worker//' packages/backend/wrangler.toml

      - name: Publish
        shell: bash
        working-directory: ./packages/backend
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: >
          while !
          yarn
          wrangler publish
          --env ${{ github.event.inputs.environment || 'staging' }}
          --var GITHUB_SHA:${{ github.sha }};
          do echo 'retrying';
          done
